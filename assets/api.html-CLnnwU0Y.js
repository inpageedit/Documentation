import{_ as s,c as o,a,b as t,d as n,e as l,w as d,r as p,o as c}from"./app-BUO_Z_l1.js";const r={};function u(g,e){const i=p("RouteLink");return c(),o("div",null,[e[3]||(e[3]=a(`<h1 id="api-文档" tabindex="-1"><a class="header-anchor" href="#api-文档"><span>API 文档</span></a></h1><div class="hint-container tip"><p class="hint-container-title">施工中</p><p>本页面的内容正在施工中，请以最终版为准！</p></div><p>安装 InPageEdit 时，将会在全局作用域下创建一个<code>InPageEdit</code>对象，该对象包含了 InPageEdit 的所有接口。</p><h2 id="window-inpageedit" tabindex="-1"><a class="header-anchor" href="#window-inpageedit"><span><code>window.InPageEdit</code></span></a></h2><p>IPE 的全局对象。</p><p>请注意：该对象不是一个类，而是一个 <code>Record</code>，在调用时不需要使用<code>new</code>关键字。</p><h2 id="inpageedit-about-void" tabindex="-1"><a class="header-anchor" href="#inpageedit-about-void"><span><code>InPageEdit.about(): void</code></span></a></h2><p>打开“关于&amp;帮助”的模态框。</p><h2 id="inpageedit-api-record-string-string" tabindex="-1"><a class="header-anchor" href="#inpageedit-api-record-string-string"><span><code>InPageEdit.api: Record&lt;string, string&gt;</code></span></a></h2><p>保留了有关 InPageEdit 的一些 API Endpoint 的信息。</p><h2 id="inpageedit-articlelink-elements-string-htmlanchorelement-jquery-htmlanchorelement-void" tabindex="-1"><a class="header-anchor" href="#inpageedit-articlelink-elements-string-htmlanchorelement-jquery-htmlanchorelement-void"><span><code>InPageEdit.articleLink(elements: string | HTMLAnchorElement | JQuery&lt;HTMLAnchorElement&gt;): void</code></span></a></h2><p>为指定的链接元素添加“快速编辑”入口。</p><ul><li><code>elements</code> 链接元素的 CSS 选择器或者 DOM 元素或者 jQuery 对象</li></ul><h2 id="inpageedit-linkshere-title-string-promise-apiresponsequerypage" tabindex="-1"><a class="header-anchor" href="#inpageedit-linkshere-title-string-promise-apiresponsequerypage"><span><code>InPageEdit.linksHere(title?: string): Promise&lt;ApiResponseQueryPage[]&gt;</code></span></a></h2><p>通过标题获取链入页面，并通过模态框展示列表。</p><ul><li><code>title</code> 要获取链入页面的页面标题，默认为当前页面</li></ul><h2 id="inpageedit-preference-record-string-any" tabindex="-1"><a class="header-anchor" href="#inpageedit-preference-record-string-any"><span><code>InPageEdit.preference: Record&lt;string, any&gt;</code></span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">const</span> preference<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  _defaults<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    doNotCollectMyInfo<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    editMinor<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    editSummary<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">    lockToolBox<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    redLinkQuickEdit<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    outSideClose<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    watchList<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">    noConfirmEdit<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    plugins<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token function">get</span><span class="token punctuation">(</span>setting<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> object <span class="token operator">|</span> <span class="token builtin">string</span></span>
<span class="line">  <span class="token function">set</span><span class="token punctuation">(</span>settingKey<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span> settingValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line">  <span class="token function">modal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="inpageedit-progress-title-boolean-string-void" tabindex="-1"><a class="header-anchor" href="#inpageedit-progress-title-boolean-string-void"><span><code>InPageEdit.progress(title?: boolean | string): void</code></span></a></h2><p>操控载入中覆盖层。</p><ul><li><code>title</code> 要显示的标题， <ul><li>若为<code>true</code>，将最后打开的载入中状态修改为已完成</li><li>若为<code>false</code>，关闭最后打开的载入中覆盖层</li><li>若为字符串，将最后打开的载入中标题修改为该字符串，如果没有打开的载入中覆盖层，则打开一个新的覆盖层</li></ul></li></ul><p>这个接口设计的比较脑瘫，之后可能会改。</p><h2 id="inpageedit-quickdelete-page-string-givenreason-string-void" tabindex="-1"><a class="header-anchor" href="#inpageedit-quickdelete-page-string-givenreason-string-void"><span><code>InPageEdit.quickDelete(page: string, givenReason?: string): void</code></span></a></h2><p>打开快速删除的对话框。</p><ul><li><code>page</code> 要删除的页面名称</li><li><code>givenReason</code> 预设的删除理由</li></ul><h2 id="inpageedit-quickdiff-param-any" tabindex="-1"><a class="header-anchor" href="#inpageedit-quickdiff-param-any"><span><code>InPageEdit.quickDiff(param: any)</code></span></a></h2><p>打开快速差异模态框，并通过给定参数获取差异内容。</p><ul><li><code>param</code> MediaWiki diff API 入参</li></ul><p>这个接口设计的比较脑瘫，之后可能也懒得改。</p><h2 id="inpageedit-quickedit-options-page-string-revision-number-section-number-reload-boolean" tabindex="-1"><a class="header-anchor" href="#inpageedit-quickedit-options-page-string-revision-number-section-number-reload-boolean"><span><code>InPageEdit.quickEdit(options?: { page: string; revision?: number; section?: number; reload?: boolean })</code></span></a></h2><p>打开快速编辑的模态框。</p><ul><li><p><code>options</code></p><ul><li>不配置或者传入空值，以当前浏览的页面为目标页面</li><li>传入字符串时，将字符串视为目标页面名</li><li>传入 JSON 对象时，将会尝试与默认配置项进行合并后执行后续操作</li></ul></li><li><p>可供配置的参数：</p><ul><li><code>options.page</code> {string} 页面名称，不能与<code>pageId</code>同时使用（预设为当前页面名）</li><li><code>options.pageId</code> {number} 页面 ID，不能与<code>page</code>同时使用</li><li><code>options.revision</code> {number} 若配置，将以提供的 revision 编号查找页面信息，可能忽略页面配置（预设为当前页面的版本 ID）</li><li><code>options.section</code> {number|&quot;new&quot;} 若配置，编辑段落，段落为大于 0 且小于页面段落数的数字或者&quot;new&quot;（预设为 null，编辑全文）</li><li><code>options.editMinor</code> {boolean} 若配置，取代小编辑的勾选状态</li><li><code>options.editSummary</code> 若配置，取代编辑摘要的内容</li><li><code>options.reload</code> {boolean} 若配置，取代保存后刷新页面的勾选状态</li></ul></li></ul><p>其余参数均不建议修改，否则可能导致故障。</p><p>这个模块开发的时间比较古早，变量的状态和代码指令都非常混乱，非常不建议随便改动。之后可能也不会再改了。</p><h2 id="inpageedit-quickpreview-params-object-modalsize-string-center-boolean-void" tabindex="-1"><a class="header-anchor" href="#inpageedit-quickpreview-params-object-modalsize-string-center-boolean-void"><span><code>InPageEdit.quickPreview(params: Object, modalSize?: string, center?: boolean): void</code></span></a></h2><p>打开快速预览的模态框。</p><ul><li><code>params</code> MediaWiki parse API 入参</li><li><code>modalSize</code> 模态框大小，可选值为<code>&quot;small&quot;</code>、<code>&quot;medium&quot;</code>、<code>&quot;large&quot;</code>，默认为<code>&quot;large&quot;</code></li><li><code>center</code> 是否居中显示模态框，默认为<code>true</code></li></ul><h2 id="inpageedit-quickredirect-type-from-to-void" tabindex="-1"><a class="header-anchor" href="#inpageedit-quickredirect-type-from-to-void"><span><code>InPageEdit.quickRedirect(type?: &#39;from&#39; | &#39;to&#39;): void</code></span></a></h2><p>打开快速重定向的模态框。</p><p>将当前页面重定向到其他页面，或者将其他页面重定向到当前页面。</p><ul><li><code>type</code> 重定向类型，可选值为<code>&quot;from&quot;</code>和<code>&quot;to&quot;</code>，默认为<code>&quot;to&quot;</code><ul><li><code>&quot;from&quot;</code> 将其他页面重定向到当前页面</li><li><code>&quot;to&quot;</code> 将当前页面重定向到其他页面</li></ul></li></ul><p>好像是这样的，我也不记得了。</p><h2 id="inpageedit-quickrename-from-string-to-string-void" tabindex="-1"><a class="header-anchor" href="#inpageedit-quickrename-from-string-to-string-void"><span><code>InPageEdit.quickRename(from: string, to: string): void</code></span></a></h2><p>打开快速重命名的模态框。</p><ul><li><code>from</code> 要重命名的页面名称</li><li><code>to</code> 重命名后的页面名称</li></ul><h2 id="inpageedit-specialnotice-void" tabindex="-1"><a class="header-anchor" href="#inpageedit-specialnotice-void"><span><code>InPageEdit.specialNotice(): void</code></span></a></h2><p>这是啥啊，我也不记得了。</p><h2 id="inpageedit-version-string" tabindex="-1"><a class="header-anchor" href="#inpageedit-version-string"><span><code>InPageEdit.version: string</code></span></a></h2><p>IPE 的版本号。</p><p>不建议你修改它的值，否则可能导致一些奇怪的问题。</p><h2 id="一些奇怪的内部接口" tabindex="-1"><a class="header-anchor" href="#一些奇怪的内部接口"><span>一些奇怪的内部接口</span></a></h2><p>你可能得通过钩子来访问这些接口，它们中有些根本就没有注册到全局对象上。</p><p>一般来说你最好不要使用这些接口，鬼知道会不会有什么奇怪的问题。</p><h3 id="analytics-featid-string-void" tabindex="-1"><a class="header-anchor" href="#analytics-featid-string-void"><span><code>_analytics(featID: string): void</code></span></a></h3>`,54)),t("p",null,[e[1]||(e[1]=n("详见")),l(i,{to:"/develop/analytics/"},{default:d(()=>e[0]||(e[0]=[n("InPageEdit Analytics")])),_:1}),e[2]||(e[2]=n("。"))]),e[4]||(e[4]=a('<p>提交 IPE 的使用数据。</p><h3 id="msg-msgkey-string-args-string-string" tabindex="-1"><a class="header-anchor" href="#msg-msgkey-string-args-string-string"><span><code>_msg: (msgKey: string, ...args: string) =&gt; string</code></span></a></h3><p>通过当前 mw 的语言环境获取消息。</p><ul><li><code>msgKey</code> 消息键名</li><li><code>args</code> 消息参数，替代消息中的占位符($1, $2...)</li></ul><p>该方法还能解析消息字符串中的简单 wiki 标记：</p><ul><li><code>http/https</code></li><li><code>[url text]</code></li><li><code>[[pagename]]</code></li><li><code>[[pagename|text]]</code></li><li><code>{{PLURAL:count|singular|plural}}</code></li><li><code>{{GENDER:gender|masculine|feminine|neutral}}</code></li></ul><p>它也接受以下 HTML 标签：</p><ul><li><code>b</code></li><li><code>br</code></li><li><code>code</code></li><li><code>del</code></li><li><code>em</code></li><li><code>i</code></li><li><code>s</code></li><li><code>strong</code></li><li><code>span</code></li><li><code>u</code></li></ul><p>允许以上 HTML 标签使用以下属性：</p><ul><li><code>title</code></li><li><code>style</code></li><li><code>class</code></li></ul><h3 id="resolveexists-page-string-reason-delete-string-edit-string-string-void" tabindex="-1"><a class="header-anchor" href="#resolveexists-page-string-reason-delete-string-edit-string-string-void"><span><code>_resolveExists: (page: string, reason?: { delete: string; edit: string } | string) =&gt; void</code></span></a></h3><p>为什么这是个内部接口？我也不知道。</p><p>打开解决目标页面已存在的问题的模态框。它提供两个按钮，一个是编辑目标页面，另一个是删除目标页面。</p><ul><li><code>page</code> 目标页面名称</li><li><code>reason</code> 理由 <ul><li>如果是字符串，同时作为编辑摘要和删除理由</li><li><code>reason.delete</code> 删除页面的原因</li><li><code>reason.edit</code> 移编辑摘要</li></ul></li></ul>',14))])}const m=s(r,[["render",u]]),b=JSON.parse('{"path":"/develop/api.html","title":"API 文档","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1744982503000,"contributors":[{"name":"dragon-fish","username":"dragon-fish","email":"dragon-fish@qq.com","commits":1,"url":"https://github.com/dragon-fish"}],"changelog":[{"hash":"aa4f9bb6393acdca70b430fbc9e6cf3d1b7f44d4","time":1744982503000,"email":"dragon-fish@qq.com","author":"dragon-fish","message":"chore: 14.5.2 update logs"}]},"filePathRelative":"develop/api.md"}');export{m as comp,b as data};
